(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{230:function(t,e,a){"use strict";a.r(e);var r=a(0),n=Object(r.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"pl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pl"}},[t._v("#")]),t._v(" PL")]),t._v(" "),a("h2",{attrs:{id:"tutorials"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tutorials"}},[t._v("#")]),t._v(" tutorials")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://medium.com/@lettier/your-easy-guide-to-monads-applicatives-functors-862048d61610",target:"_blank",rel:"noopener noreferrer"}},[t._v("functor, applicative, monad"),a("OutboundLink")],1)]),t._v(" "),a("h2",{attrs:{id:"compare"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#compare"}},[t._v("#")]),t._v(" compare")]),t._v(" "),a("p",[t._v("Scala\nJS\nTypeScript\nPython\nGolang\nRust\nArray Variant")]),t._v(" "),a("p",[t._v("---|---|---|---|---|---\nString Literal | "),a("code",[t._v('s"($x, $y)"')]),t._v(" |\noverride method | "),a("code",[t._v("override def toString: String =")]),t._v(" |\nprivate mem | "),a("code",[t._v("private var _x = 0")]),t._v(" "),a("code",[t._v("private val bound = 100")]),t._v(" |\nGetter/Setter | "),a("code",[t._v("def x = _x")]),t._v("/"),a("code",[t._v("def x_= (newValue: Int): Unit = {}")]),t._v(" |\ntrait/interface |"),a("code",[t._v("trait Iterator[A] { def next(): A }")]),t._v(" |\ntuple | "),a("code",[t._v('val ingredient = ("Sugar" , 25)')]),t._v(" |\nPattern matching | "),a("code",[t._v("val (name, quantity) = ingredient")]),t._v(" |\nMixins | "),a("code",[t._v("class D extends Class_B with trait_C")]),t._v("\npartial application| "),a("code",[t._v("def foldLeft[B](z: B)(op: (B, A) => B): B")])]),t._v(" "),a("p",[t._v("return")]),t._v(" "),a("h1",{attrs:{id:"erlang"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#erlang"}},[t._v("#")]),t._v(" Erlang")]),t._v(" "),a("p",[t._v("3 errors: try catch, process dies, undefined functions.")]),t._v(" "),a("div",{staticClass:"language-erlang extra-class"},[a("pre",{pre:!0,attrs:{class:"language-erlang"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("link")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token atom"}},[t._v("pid")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("monitor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("M")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("F")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("Args")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("spawn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("M")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("F")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token atom"}},[t._v("a1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token atom"}},[t._v("a2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token atom"}},[t._v("distributed")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token atom"}},[t._v("spawn")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("Pid")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("spawn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("N")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("Mod")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("Func")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("Arglist")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("receive")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token atom"}},[t._v("msg1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token atom"}},[t._v("msg2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("Pid")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token atom"}},[t._v("msg")]),t._v("\n\n")])])]),a("h1",{attrs:{id:"dafny"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dafny"}},[t._v("#")]),t._v(" Dafny")]),t._v(" "),a("p",[t._v("https://rise4fun.com/Dafny/tutorial/Guide")]),t._v(" "),a("p",[t._v("no runtime error")]),t._v(" "),a("div",{staticClass:"language-dafny extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("forall k: int :: 0 <= k < a.Length ==> 0 < a[k]\n")])])]),a("p",[t._v("pre-condition: requires\npost-condition: ensures")]),t._v(" "),a("h1",{attrs:{id:"swift"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#swift"}},[t._v("#")]),t._v(" swift")]),t._v(" "),a("p",[t._v("https://github.com/apple/swift-evolution/blob/master/proposals/0261-identifiable.md")]),t._v(" "),a("h1",{attrs:{id:"golang"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#golang"}},[t._v("#")]),t._v(" Golang")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/openacid/slim",target:"_blank",rel:"noopener noreferrer"}},[t._v("memory efficient"),a("OutboundLink")],1)]),t._v(" "),a("p",[a("a",{attrs:{href:"https://dave.cheney.net/high-performance-go-workshop/dotgo-paris.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Golang benchmark"),a("OutboundLink")],1)]),t._v(" "),a("p",[a("a",{attrs:{href:"https://blog.huoding.com/2019/04/11/728",target:"_blank",rel:"noopener noreferrer"}},[t._v("aviod errors"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("errors are values")]),t._v(" "),a("p",[t._v("panic")]),t._v(" "),a("p",[t._v("goroutine")]),t._v(" "),a("h2",{attrs:{id:"library"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#library"}},[t._v("#")]),t._v(" library")]),t._v(" "),a("p",[t._v("Gin")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/julienschmidt/httprouter",target:"_blank",rel:"noopener noreferrer"}},[t._v("HttpRouter"),a("OutboundLink")],1)]),t._v(" "),a("h1",{attrs:{id:"popl-symposium-on-principles-of-programming-languages"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#popl-symposium-on-principles-of-programming-languages"}},[t._v("#")]),t._v(" POPL - Symposium on Principles of Programming Languages")]),t._v(" "),a("p",[t._v("https://conf.researchr.org/home/POPL-2018")]),t._v(" "),a("p",[t._v("https://github.com/gasche/popl2018-papers")]),t._v(" "),a("h1",{attrs:{id:"programming-language"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#programming-language"}},[t._v("#")]),t._v(" programming language")]),t._v(" "),a("p",[t._v("programming language must be")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("Unambiguous")])]),t._v(" "),a("li",[a("p",[t._v("Implementable")])]),t._v(" "),a("li",[a("p",[t._v("Turing complete")])])]),t._v(" "),a("p",[t._v("what is desirable property?")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("Readability or clarity")])]),t._v(" "),a("li",[a("p",[t._v("conciseness")])]),t._v(" "),a("li",[a("p",[t._v("Math foundation")])])]),t._v(" "),a("h2",{attrs:{id:"low-level-pl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#low-level-pl"}},[t._v("#")]),t._v(" low-level PL")]),t._v(" "),a("p",[t._v("has features reflect underlying hardware.")]),t._v(" "),a("p",[t._v("memory location, addresses; jumps")]),t._v(" "),a("h2",{attrs:{id:"high-level-pl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#high-level-pl"}},[t._v("#")]),t._v(" high-level PL")]),t._v(" "),a("p",[t._v("has model of computation")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("functional language, math functions")])]),t._v(" "),a("li",[a("p",[t._v("logic language, first order and predicate logic")])])]),t._v(" "),a("p",[t._v("modifiable variables, pointers, goto, loop")]),t._v(" "),a("h2",{attrs:{id:"pl-category"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pl-category"}},[t._v("#")]),t._v(" PL category")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("Imperative: C/C++/Ada/more")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("variable denote memory locations")])]),t._v(" "),a("li",[a("p",[t._v("execution proceeds by repeating modify memory locations")])]),t._v(" "),a("li",[a("p",[t._v("program tell the computer how tot perform the computation")])])])]),t._v(" "),a("li",[a("p",[t._v("Declarative: Functional/Logic")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("variables represent values, like in math")])]),t._v(" "),a("li",[a("p",[t._v("no need for loop")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("describe")]),t._v(" what to be computed")])])])])]),t._v(" "),a("h2",{attrs:{id:"syntax"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#syntax"}},[t._v("#")]),t._v(" syntax")]),t._v(" "),a("p",[t._v("rules governing the use fo symbols")]),t._v(" "),a("ul",[a("li",[t._v("chars, words(names, keywords, etc.) sentences, function, statements, loops, expression")])]),t._v(" "),a("h2",{attrs:{id:"semantics"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#semantics"}},[t._v("#")]),t._v(" semantics")]),t._v(" "),a("p",[t._v("give meaning to syntaticly valid program")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("static semantic define use of types.")])]),t._v(" "),a("li",[a("p",[t._v("dynamic semantics, define what computation the computer will perform for each valid system.")])])]),t._v(" "),a("h2",{attrs:{id:"compiler"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#compiler"}},[t._v("#")]),t._v(" compiler")]),t._v(" "),a("p",[t._v("translate a program from one PL to another PL")]),t._v(" "),a("h2",{attrs:{id:"interpreter"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#interpreter"}},[t._v("#")]),t._v(" interpreter")]),t._v(" "),a("p",[t._v("execute program, output is the result.")]),t._v(" "),a("h1",{attrs:{id:"compiler-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#compiler-2"}},[t._v("#")]),t._v(" compiler")]),t._v(" "),a("ol",[a("li",[t._v("lexical analysis - lexing")])]),t._v(" "),a("p",[t._v("forms sequences of characters into words(tokens)")]),t._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[t._v("syntatic analysis - parsing")])]),t._v(" "),a("p",[t._v("forms sequences fo words to sentences(expressions, statements, functions)")]),t._v(" "),a("ol",{attrs:{start:"3"}},[a("li",[a("p",[t._v("Type checking")])]),t._v(" "),a("li",[a("p",[t._v("code generation")])]),t._v(" "),a("li",[a("p",[t._v("optimization")])])]),t._v(" "),a("h2",{attrs:{id:"grammars"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#grammars"}},[t._v("#")]),t._v(" grammars")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("regular expression, form char into words, cannot express nesting")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("alternation")])]),t._v(" "),a("li",[a("p",[t._v("concatenation")])]),t._v(" "),a("li",[a("p",[t._v("keleene star *")])])])]),t._v(" "),a("li",[a("p",[t._v("context free grammer, form words to sentences")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("Productions, substitution rules")])]),t._v(" "),a("li",[a("p",[t._v("nonterminals (symbols)")])]),t._v(" "),a("li",[a("p",[t._v("terminals (tokens consisting of the characters of an alphabet)")])]),t._v(" "),a("li",[a("p",[t._v("start symbols (start non-terminals)")])])])])]),t._v(" "),a("p",[t._v("Non-terminals goes to terminals and/or non-terminals, $\\epsilon$.\nDerivation starts with the start non-terminals and repleatly applies rules from the CFG, replacing non-terminal with right hand side of the rule, until a string of only terminal remians.")]),t._v(" "),a("h2",{attrs:{id:"scoping"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#scoping"}},[t._v("#")]),t._v(" Scoping")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("rules governing the association betweens names and things(var, type, functions, etc.)")])]),t._v(" "),a("li",[a("p",[t._v("the portion of the program in which the name is visible")])])]),t._v(" "),a("h2",{attrs:{id:"block"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#block"}},[t._v("#")]),t._v(" Block")]),t._v(" "),a("p",[t._v("syntatic construct for defining the scope of a language")]),t._v(" "),a("p",[t._v("in Block structured language, block(including functions) can be nested")]),t._v(" "),a("h2",{attrs:{id:"turing-machine"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#turing-machine"}},[t._v("#")]),t._v(" Turing machine")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("tape")])]),t._v(" "),a("li",[a("p",[t._v("symbole")])]),t._v(" "),a("li",[a("p",[t._v("head")])]),t._v(" "),a("li",[a("p",[t._v("states")])])]),t._v(" "),a("p",[t._v("given symbol and state, give an action(left, right, still), write a symbol, and get a new state.")]),t._v(" "),a("h2",{attrs:{id:"universal-turing-machine"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#universal-turing-machine"}},[t._v("#")]),t._v(" Universal Turing machine")]),t._v(" "),a("p",[t._v("Given T, I, UTM can emulate he behavior of T, I.")]),t._v(" "),a("h2",{attrs:{id:"parameter-passing"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#parameter-passing"}},[t._v("#")]),t._v(" parameter passing")]),t._v(" "),a("ul",[a("li",[t._v("call by name")]),t._v(" "),a("li",[t._v("call by value")]),t._v(" "),a("li",[t._v("call by reference")]),t._v(" "),a("li",[t._v("call by value result")])]),t._v(" "),a("h1",{attrs:{id:"javascript"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#javascript"}},[t._v("#")]),t._v(" JavaScript")]),t._v(" "),a("h2",{attrs:{id:"cjk-regexp"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cjk-regexp"}},[t._v("#")]),t._v(" CJK regexp")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("/[\\u4E00-\\u9FCC\\u3400-\\u4DB5\\uFA0E\\uFA0F\\uFA11\\uFA13\\uFA14\\uFA1F\\uFA21\\uFA23\\uFA24\\uFA27-\\uFA29]|[\\ud840-\\ud868][\\udc00-\\udfff]|\\ud869[\\udc00-\\uded6\\udf00-\\udfff]|[\\ud86a-\\ud86c][\\udc00-\\udfff]|\\ud86d[\\udc00-\\udf34\\udf40-\\udfff]|\\ud86e[\\udc00-\\udc1d]/\n")])])]),a("h2",{attrs:{id:"umd"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#umd"}},[t._v("#")]),t._v(" UMD")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("(function (root, factory) {\n  if (typeof exports === 'object') {\n    // CommonJS\n    module.exports = factory(require('b'));\n  } else if (typeof define === 'function' && define.amd) {\n    // AMD\n    define(['b'], function (b) {\n      return (root.returnExportsGlobal = factory(b));\n    });\n  } else {\n    // Global Variables\n    root.returnExportsGlobal = factory(root.b);\n  }\n}(this, function (b) {\n  // Your actual module\n  return {};\n}));\n")])])]),a("p",[a("a",{attrs:{href:"https://dontkry.com/posts/code/browserify-and-the-universal-module-definition.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Reference"),a("OutboundLink")],1)]),t._v(" "),a("h1",{attrs:{id:"cpp"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cpp"}},[t._v("#")]),t._v(" CPP")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://isocpp.org/faq",target:"_blank",rel:"noopener noreferrer"}},[t._v("Cpp FAQ"),a("OutboundLink")],1)]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("-std=c++11: Enables C++11 support\n-g: Produces debugging information in the OS's native format.\n-ggdb: Produces debugging information specifically intended for gdb.\n-O0: Optimize option that reduces compilation time and makes debugging more reliable.\n-O3: Increases both the compilation time and the performance of the generated code. Use this when running benchmarks.\n-Wall: Generate helpful warnings. Do not ignore them! In fact, force yourself to deal with warnings by handling them as errors with the -Werror compiler flag.\n")])])]),a("h2",{attrs:{id:"unique-ptr"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#unique-ptr"}},[t._v("#")]),t._v(" unique ptr")]),t._v(" "),a("p",[a("a",{attrs:{href:"http://zh.cppreference.com/w/cpp/memory/unique_ptr",target:"_blank",rel:"noopener noreferrer"}},[t._v("cppreference"),a("OutboundLink")],1)]),t._v(" "),a("h2",{attrs:{id:"cpp-style-guide"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cpp-style-guide"}},[t._v("#")]),t._v(" cpp style guide")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://google.github.io/styleguide/cppguide.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("google cpp style guide"),a("OutboundLink")],1)]),t._v(" "),a("h2",{attrs:{id:"cmake"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cmake"}},[t._v("#")]),t._v(" cmake")]),t._v(" "),a("p",[a("a",{attrs:{href:"http://derekmolloy.ie/hello-world-introductions-to-cmake/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Introduction to CMake"),a("OutboundLink")],1)]),t._v(" "),a("h2",{attrs:{id:"gdb"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#gdb"}},[t._v("#")]),t._v(" GDB")]),t._v(" "),a("blockquote",[a("p",[t._v("gdbinit")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("# We have scroll bars in the year 2015!\nset pagination off\n\n# Attach to both parent and child on fork\nset detach-on-fork off\n\n# Stop/resume all processes\nset schedule-multiple on\n\n# Usually don't care about these signals\nhandle SIGUSR1 noprint nostop\nhandle SIGUSR2 noprint nostop\n\n# Ugly hack so we don't break on process exit\npython gdb.events.exited.connect(lambda x: [gdb.execute('inferior 1'), gdb.post_event(lambda: gdb.execute('continue'))])\n")])])]),a("h3",{attrs:{id:"asi-hazard-automatic-semicolon-insertion-asi"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#asi-hazard-automatic-semicolon-insertion-asi"}},[t._v("#")]),t._v(" ASI hazard, Automatic Semicolon Insertion (ASI)")]),t._v(" "),a("p",[t._v("methods in OOP are invoked like this: x.printVar() => A.printVar(x)")]),t._v(" "),a("p",[t._v("Mangling in python")]),t._v(" "),a("h2",{attrs:{id:"super-return-tricks"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#super-return-tricks"}},[t._v("#")]),t._v(" super return tricks")]),t._v(" "),a("p",[t._v("due to mutable prototype chains, we don't have all of that information about an object which doesn't throw from a call to G.prototype.checkG.call(obj)")]),t._v(" "),a("pre",[a("code",[t._v("class F { #f; checkF() { this.#f; } }\nclass G extends F { #g; checkG() { this.#g; } }\n\nlet obj = { };\nObject.setPrototypeOf(G, class { constructor() { return obj; });\nnew G;\nObject.setPrototypeOf(G, F);\nG.prototype.checkG.call(obj);  // doesn't throw\nF.prototype.checkF.call(obj);  // throws\n\n// polyfill\nObject.setPrototypeOf = Object.setPrototypeOf || function (obj, proto) {\n  obj.__proto__ = proto;\n  return obj;\n}\n")])]),t._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tc39/proposal-class-fields/blob/master/PRIVATE_SYNTAX_FAQ.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("tc39/proposal-class-fields"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("Optional project: Implement the abstract interpreter and try it for the parity abstract domain. We provide")]),t._v(" "),a("p",[t._v("the lexer (lexer.mll),")]),t._v(" "),a("p",[t._v("the parser (parser.mly),")]),t._v(" "),a("p",[t._v("the construction of the abstract syntax tree for expressions ("),a("a",{attrs:{href:"http://abstractsyntaxexpressions.ml/",target:"_blank",rel:"noopener noreferrer"}},[t._v("abstractSyntaxExpressions.ml"),a("OutboundLink")],1),t._v(") and programs (abstractTree.mli "),a("a",{attrs:{href:"http://abstracttree.ml/",target:"_blank",rel:"noopener noreferrer"}},[t._v("abstractTree.ml"),a("OutboundLink")],1),t._v("),")]),t._v(" "),a("p",[t._v("the labelling and primitives of the abstract syntax ("),a("a",{attrs:{href:"http://abstractsyntax.ml/",target:"_blank",rel:"noopener noreferrer"}},[t._v("abstractSyntax.ml"),a("OutboundLink")],1),t._v("),")]),t._v(" "),a("p",[t._v("the interface to the abstract domain (abstractDomain.mli),")]),t._v(" "),a("p",[t._v("the printing of labelled programs ("),a("a",{attrs:{href:"http://printer.ml/",target:"_blank",rel:"noopener noreferrer"}},[t._v("printer.ml"),a("OutboundLink")],1),t._v("),")]),t._v(" "),a("p",[t._v("an implementation of the parity abstract domain ("),a("a",{attrs:{href:"http://abstractdomainparity.ml/",target:"_blank",rel:"noopener noreferrer"}},[t._v("abstractDomainParity.ml"),a("OutboundLink")],1),t._v(") in OCaml.")]),t._v(" "),a("p",[t._v("It remains to design the abstract interpreter ("),a("a",{attrs:{href:"http://abstractinterpreter.ml/",target:"_blank",rel:"noopener noreferrer"}},[t._v("abstractInterpreter.ml"),a("OutboundLink")],1),t._v("). By creating a symbolic link of "),a("a",{attrs:{href:"http://abstractdomain.ml/",target:"_blank",rel:"noopener noreferrer"}},[t._v("abstractDomain.ml"),a("OutboundLink")],1),t._v(" to "),a("a",{attrs:{href:"http://abstractdomainparity.ml/",target:"_blank",rel:"noopener noreferrer"}},[t._v("abstractDomainParity.ml"),a("OutboundLink")],1),t._v(", the abstract interpreter is instantiated to parity analysis. See typescript for examples. All these files are compressed in a .tgz or .zip.")]),t._v(" "),a("h1",{attrs:{id:"fpl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#fpl"}},[t._v("#")]),t._v(" FPL")]),t._v(" "),a("ul",[a("li",[t._v("Functor lifts or upgrades a function, allowing it to operate on a single effect, leaving the effect intact after it’s done. It requires a lawful map definition.")]),t._v(" "),a("li",[t._v("Applicative functor builds on or generalizes functor, allowing you to sequence multiple independent effects. It requires a lawful pure and apply definition.")]),t._v(" "),a("li",[t._v("Monad builds on or generalizes applicative functor, allowing you to sequence independent and/or dependent effects. It requires a lawful join definition.")])]),t._v(" "),a("h1",{attrs:{id:"ocaml"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ocaml"}},[t._v("#")]),t._v(" OCaml")]),t._v(" "),a("p",[t._v("http://www.cs.cornell.edu/courses/cs3110/2018fa/textbook/modules/structures.html")])])}),[],!1,null,null,null);e.default=n.exports}}]);